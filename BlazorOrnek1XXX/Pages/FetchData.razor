@page "/fetchdata"
@using BlazorOrnek1.Data
@page "/KisilerinListesi"
@inject HttpClient myHttp
@inject WeatherForecastService ForecastService

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@if (kisiler == null)
{
    <p>Yükleniyor...</p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>@nameof(Kisi.Adi)</th>
            <th>@nameof(Kisi.Soyadi)</th>
            <th>@nameof(Kisi.Cinsiyeti)</th>
            <th>@nameof(Kisi.DogumYili)</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var kisi in kisiler)
        {
            <tr>
                <td>@kisi.Adi</td>
                <td>@kisi.Soyadi</td>
                <td>@kisi.Cinsiyeti</td>
                <td>@kisi.DogumYili</td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;

    //protected override async Task OnInitializedAsync()
    //{
    //    forecasts = await ForecastService.GetForecastAsync(DateOnly.FromDateTime(DateTime.Now));
    

    public List<Kisi> kisiler;
    protected override async Task OnInitializedAsync()
    {
        kisiler = await myHttp.GetFromJsonAsync
            <List<Kisi>>("D:/Kisi.json");
    }
}
